{"ast":null,"code":"var _jsxFileName = \"/Users/williamsulinski/code/healthkpis/src/components/SleepReview.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nconst SleepReview = props => {\n  const totalDurationHours = props.sleepEntries.reduce((acc, val) => acc + val.durationHours, 0);\n  const totalDurationMinutes = props.sleepEntries.reduce((acc, val) => acc + val.durationMinutes, 0) / 60;\n  const totalSleep = totalDurationHours + totalDurationMinutes / 60;\n  const averageSleep = Math.round(totalSleep / props.sleepEntriesLength);\n  const minRemain = totalSleep % props.sleepEntriesLength;\n  const averageSleepScore = Math.round(props.sleepEntries.reduce((acc, val) => acc + val.score, 0) / props.sleepEntriesLength);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Woohoo!\"), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Last night\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Average\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Change\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Sleep duration\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, props.sleepEntries[props.sleepEntriesLength - 1].durationHours, \"hrs, \", props.sleepEntries[props.sleepEntriesLength - 1].durationMinutes, \"min \"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, averageSleep, \"hrs, \", minRemain, \"mins\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Sleep score\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, props.sleepEntries[props.sleepEntriesLength - 1].score), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, averageSleepScore), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    sleepEntriesLength: state.sleepEntries.length,\n    sleepEntries: state.sleepEntries\n  };\n};\n\nexport default connect(mapStateToProps, {})(SleepReview);","map":{"version":3,"sources":["/Users/williamsulinski/code/healthkpis/src/components/SleepReview.js"],"names":["React","connect","SleepReview","props","totalDurationHours","sleepEntries","reduce","acc","val","durationHours","totalDurationMinutes","durationMinutes","totalSleep","averageSleep","Math","round","sleepEntriesLength","minRemain","averageSleepScore","score","mapStateToProps","state","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nconst SleepReview = props => {\n\n\n    const totalDurationHours = props.sleepEntries.reduce((acc, val) => acc + val.durationHours, 0)\n    const totalDurationMinutes = (props.sleepEntries.reduce((acc, val) => acc + val.durationMinutes, 0)) / 60\n    const totalSleep = totalDurationHours + (totalDurationMinutes / 60)\n    const averageSleep = Math.round(totalSleep / props.sleepEntriesLength);\n    const minRemain = totalSleep % props.sleepEntriesLength\n\n    const averageSleepScore = Math.round(props.sleepEntries.reduce((acc, val) => acc + val.score, 0) / props.sleepEntriesLength)\n\n\n    return (\n        <div>\n            <h2>Woohoo!</h2>\n\n            <h3>{/* Add awards */}</h3>\n\n            <table>\n                <thead>\n                    <tr>\n                        <th></th>\n                        <th>Last night</th>\n                        <th>Average</th>\n                        <th>Change</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <th>Sleep duration</th>\n                        <td>{props.sleepEntries[props.sleepEntriesLength - 1].durationHours}hrs, {props.sleepEntries[props.sleepEntriesLength - 1].durationMinutes}min </td>\n                        <td>{averageSleep}hrs, {minRemain}mins</td>\n                        <td></td>\n\n\n                    </tr>\n                    <tr>\n                        <th>Sleep score</th>\n                        <td>{props.sleepEntries[props.sleepEntriesLength - 1].score}</td>\n                        <td>{averageSleepScore}</td>\n                        <td></td>\n                    </tr>\n                </tbody>\n            </table>\n\n\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        sleepEntriesLength: state.sleepEntries.length,\n        sleepEntries: state.sleepEntries\n    }\n}\nexport default connect(mapStateToProps, {})(SleepReview);"]},"metadata":{},"sourceType":"module"}