{"ast":null,"code":"import _objectSpread from \"/Users/williamsulinski/code/healthkpis/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/williamsulinski/code/healthkpis/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/williamsulinski/code/healthkpis/src/components/LogSleep.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { addSleep } from '../actions/sleepActions';\nimport SleepData from './SleepData';\n\nconst LogSleep = props => {\n  const today = new Date().toISOString().substr(0, 10);\n\n  const _useState = useState({\n    duration: null,\n    score: null,\n    bedtime: null,\n    date: new Date().toISOString() // Date will be handled by the server eventually\n\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        sleepText = _useState2[0],\n        setSleepText = _useState2[1];\n\n  const handleChanges = e => {\n    setSleepText(_objectSpread({}, sleepText, {\n      [e.target.name]: +e.target.value\n    }));\n  }; // console.log(sleepText);\n\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.addSleep(sleepText);\n  };\n\n  return React.createElement(\"main\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Log sleep\"), React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Date\", React.createElement(\"input\", {\n    type: \"date\",\n    value: today,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Sleep duration\", React.createElement(\"input\", {\n    type: \"number\",\n    name: \"duration\",\n    onChange: handleChanges,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Sleep score\", React.createElement(\"input\", {\n    type: \"number\",\n    name: \"score\",\n    onChange: handleChanges,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Bedtime\", React.createElement(\"input\", {\n    type: \"number\",\n    name: \"bedtime\",\n    onChange: handleChanges,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    onClick: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Log sleep\")), React.createElement(\"section\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(SleepData, {\n    sleepEntries: props.sleepEntries,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  })));\n};\n\nconst mapStateToProps = state => {\n  return {\n    addSleep: addSleep,\n    sleepEntries: state.sleepEntries\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addSleep\n})(LogSleep);","map":{"version":3,"sources":["/Users/williamsulinski/code/healthkpis/src/components/LogSleep.js"],"names":["React","useState","connect","addSleep","SleepData","LogSleep","props","today","Date","toISOString","substr","duration","score","bedtime","date","sleepText","setSleepText","handleChanges","e","target","name","value","handleSubmit","preventDefault","sleepEntries","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,yBAAzB;AAEA,OAAOC,SAAP,MAAsB,aAAtB;;AAIA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AAEtB,QAAMC,KAAK,GAAG,IAAIC,IAAJ,GAAWC,WAAX,GAAyBC,MAAzB,CAAgC,CAAhC,EAAmC,EAAnC,CAAd;;AAFsB,oBAIYT,QAAQ,CAAC;AACvCU,IAAAA,QAAQ,EAAE,IAD6B;AAEvCC,IAAAA,KAAK,EAAE,IAFgC;AAGvCC,IAAAA,OAAO,EAAE,IAH8B;AAIvCC,IAAAA,IAAI,EAAE,IAAIN,IAAJ,GAAWC,WAAX,EAJiC,CAKvC;;AALuC,GAAD,CAJpB;AAAA;AAAA,QAIfM,SAJe;AAAA,QAIJC,YAJI;;AAYtB,QAAMC,aAAa,GAAGC,CAAC,IAAI;AACvBF,IAAAA,YAAY,mBACLD,SADK;AAER,OAACG,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiB,CAACF,CAAC,CAACC,MAAF,CAASE;AAFnB,OAAZ;AAIH,GALD,CAZsB,CAmBtB;;;AAIA,QAAMC,YAAY,GAAGJ,CAAC,IAAI;AACtBA,IAAAA,CAAC,CAACK,cAAF;AACAjB,IAAAA,KAAK,CAACH,QAAN,CAAeY,SAAf;AACH,GAHD;;AAKA,SAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAEA;AACQ,IAAA,IAAI,EAAC,MADb;AAEQ,IAAA,KAAK,EAAER,KAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,CADJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEI;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,IAAI,EAAC,UAFT;AAGI,IAAA,QAAQ,EAAEU,aAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CATJ,EAkBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,IAAI,EAAC,OAFT;AAGI,IAAA,QAAQ,EAAEA,aAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAlBJ,EA2BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAEI;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,IAAI,EAAC,SAFT;AAGI,IAAA,QAAQ,EAAEA,aAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CA3BJ,EAoCI;AAAQ,IAAA,OAAO,EAAEK,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBApCJ,CALJ,EA8CI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAW,IAAA,YAAY,EAAEhB,KAAK,CAACkB,YAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CA9CJ,CAFJ;AAuDH,CAnFD;;AAqFA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHvB,IAAAA,QAAQ,EAAEA,QADP;AAEHqB,IAAAA,YAAY,EAAEE,KAAK,CAACF;AAFjB,GAAP;AAIH,CALD;;AAOA,eAAetB,OAAO,CAACuB,eAAD,EAAkB;AAAEtB,EAAAA;AAAF,CAAlB,CAAP,CAAuCE,QAAvC,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { addSleep } from '../actions/sleepActions';\n\nimport SleepData from './SleepData';\n\n\n\nconst LogSleep = props => {\n\n    const today = new Date().toISOString().substr(0, 10);\n\n    const [sleepText, setSleepText] = useState({\n        duration: null,\n        score: null,\n        bedtime: null,\n        date: new Date().toISOString()\n        // Date will be handled by the server eventually\n    });\n\n    const handleChanges = e => {\n        setSleepText({\n            ...sleepText,\n            [e.target.name]: +e.target.value\n        });\n    };\n\n    // console.log(sleepText);\n\n\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        props.addSleep(sleepText);\n    };\n\n    return (\n\n        <main>\n            <h2>\n                Log sleep\n            </h2>\n\n            <form>\n                <label>\n                    Date\n                <input\n                        type=\"date\"\n                        value={today}\n                    />\n                </label>\n\n                <label>\n                    Sleep duration\n                    <input\n                        type='number'\n                        name='duration'\n                        onChange={handleChanges}\n                    />\n                </label>\n\n                <label>\n                    Sleep score\n                    <input\n                        type='number'\n                        name='score'\n                        onChange={handleChanges}\n                    />\n                </label>\n\n                <label>\n                    Bedtime\n                    <input\n                        type='number'\n                        name='bedtime'\n                        onChange={handleChanges}\n                    />\n                </label>\n\n                <button onClick={handleSubmit}>\n                    Log sleep\n                </button>\n            </form>\n\n            <section>\n                <SleepData sleepEntries={props.sleepEntries} />\n\n\n            </section>\n        </main>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        addSleep: addSleep,\n        sleepEntries: state.sleepEntries\n    }\n}\n\nexport default connect(mapStateToProps, { addSleep })(LogSleep);"]},"metadata":{},"sourceType":"module"}