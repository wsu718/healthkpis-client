{"ast":null,"code":"var _jsxFileName = \"/Users/williamsulinski/code/healthkpis/src/components/SleepData.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nconst SleepData = props => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"Your sleep data\"), React.createElement(\"table\", {\n    className: \"datatable\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Date\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Duration\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Sleep score\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Bedtime\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, props.sleepEntries.map((sleep, index) => React.createElement(\"tr\", {\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: `/sleep/${sleep.date}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, sleep.date.split('-').reverse())), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, sleep.durationHours, \" hrs, \", sleep.durationMinutes, \" min\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, sleep.score), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, sleep.bedtimeHour, \":\", sleep.bedtimeMinutes < 10 ? `0${sleep.bedtimeMinutes}` : sleep.bedtimeMinutes, \" \", sleep.bedtimeAMPM))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    sleepEntries: state.sleepEntries\n  };\n};\n\nexport default connect(mapStateToProps, {})(SleepData);","map":{"version":3,"sources":["/Users/williamsulinski/code/healthkpis/src/components/SleepData.js"],"names":["React","connect","Link","SleepData","props","sleepEntries","map","sleep","index","date","split","reverse","durationHours","durationMinutes","score","bedtimeHour","bedtimeMinutes","bedtimeAMPM","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AAIvB,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAGI;AAAO,IAAA,SAAS,EAAC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJJ,CADJ,CADJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,KAAK,CAACC,YAAN,CAAmBC,GAAnB,CAAuB,CAACC,KAAD,EAAQC,KAAR,KACpB;AAAI,IAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAG,UAASD,KAAK,CAACE,IAAK,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCF,KAAK,CAACE,IAAN,CAAWC,KAAX,CAAiB,GAAjB,EAAsBC,OAAtB,EAAnC,CAAJ,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKJ,KAAK,CAACK,aAAX,YAAgCL,KAAK,CAACM,eAAtC,SAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKN,KAAK,CAACO,KAAX,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKP,KAAK,CAACQ,WAAX,OAAyBR,KAAK,CAACS,cAAN,GAAuB,EAAvB,GAA6B,IAAGT,KAAK,CAACS,cAAe,EAArD,GAAyDT,KAAK,CAACS,cAAxF,OAAyGT,KAAK,CAACU,WAA/G,CAJJ,CADH,CADL,CATJ,CAHJ,CADJ;AA4BH,CAhCD;;AAkCA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHd,IAAAA,YAAY,EAAEc,KAAK,CAACd;AADjB,GAAP;AAGH,CAJD;;AAKA,eAAeJ,OAAO,CAACiB,eAAD,EAAkB,EAAlB,CAAP,CAA6Bf,SAA7B,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nconst SleepData = props => {\n\n\n\n    return (\n        <div>\n            <h2>Your sleep data</h2>\n\n            <table className=\"datatable\">\n                <thead>\n                    <tr>\n                        <th>Date</th>\n                        <th>Duration</th>\n                        <th>Sleep score</th>\n                        <th>Bedtime</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {props.sleepEntries.map((sleep, index) => (\n                        <tr key={index}>\n                            <td><Link to={`/sleep/${sleep.date}`}>{sleep.date.split('-').reverse()}</Link></td>\n                            <td>{sleep.durationHours} hrs, {sleep.durationMinutes} min</td>\n                            <td>{sleep.score}</td>\n                            <td>{sleep.bedtimeHour}:{sleep.bedtimeMinutes < 10 ? `0${sleep.bedtimeMinutes}` : sleep.bedtimeMinutes} {sleep.bedtimeAMPM}</td>\n                            {/* Ternary adds a 0 if bedtime minutes is a single integer, otherwise it would read \"10:0 PM\" */}\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n\n        </div >\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        sleepEntries: state.sleepEntries\n    }\n}\nexport default connect(mapStateToProps, {})(SleepData);"]},"metadata":{},"sourceType":"module"}