{"ast":null,"code":"var _jsxFileName = \"/Users/williamsulinski/code/healthkpis/src/components/SleepReview.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nconst SleepReview = props => {\n  // const dayReviewing = props.match.params.sleepDate;\n  // // console.log(dayReviewing)\n  // // This Day's Sleep\n  // const thisDaySleepDurationHours = props.sleepEntries.find(today => today.date === dayReviewing).durationHours\n  // const thisDaySleepDurationMinutes = props.sleepEntries.find(today => today.date === dayReviewing).durationMinutes\n  // const thisDaySleepDurationTotal = thisDaySleepDurationHours + (thisDaySleepDurationMinutes / 60)\n  // const thisDaySleepScore = props.sleepEntries.find(today => today.date === dayReviewing).score\n  // // Average Sleep Score\n  // const averageSleepScore = Math.round(props.sleepEntries.reduce((acc, val) => acc + val.score, 0) / props.sleepEntriesLength)\n  // // Average Sleep Duration: to calculate average sleep duration:\n  // // 1. We need to sum the hours from all sleep entries \n  // const totalDurationHours = props.sleepEntries.reduce((acc, val) => acc + val.durationHours, 0)\n  // // 2. Then we need to sum the minutes from all the sleep entries, and add them to the hours\n  // const totalDurationMinutes = (props.sleepEntries.reduce((acc, val) => acc + val.durationMinutes, 0)) / 60\n  // const totalDurationHoursAndMinutes = totalDurationHours + (totalDurationMinutes / 60)\n  // // 3. Then we need to get an average \n  // const averageSleep = Math.round(totalDurationHoursAndMinutes / props.sleepEntriesLength);\n  // // 3. But we also need to show the remaining minutes\n  // const averageSleepMinRemain = Math.round(totalDurationHoursAndMinutes % props.sleepEntriesLength)\n  // // Change in sleep\n  // const changeDuration = Math.round((thisDaySleepDurationTotal - averageSleep) / thisDaySleepDurationTotal * 100)\n  // const changeScore = Math.round((thisDaySleepScore - averageSleepScore) / thisDaySleepScore * 100)\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Data on your sleep\"), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }));\n};\n\nconst mapStateToProps = state => {\n  return {\n    sleepEntriesLength: state.sleepEntries.length,\n    sleepEntries: state.sleepEntries\n  };\n};\n\nexport default connect(mapStateToProps, {})(SleepReview);","map":{"version":3,"sources":["/Users/williamsulinski/code/healthkpis/src/components/SleepReview.js"],"names":["React","connect","SleepReview","props","mapStateToProps","state","sleepEntriesLength","sleepEntries","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAEzB;AAEA;AAEA;AACA;AACA;AACA;AAGA;AAGA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AACA;AACA;AAEA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADJ;AA0CH,CAjFD;;AAmFA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHC,IAAAA,kBAAkB,EAAED,KAAK,CAACE,YAAN,CAAmBC,MADpC;AAEHD,IAAAA,YAAY,EAAEF,KAAK,CAACE;AAFjB,GAAP;AAIH,CALD;;AAMA,eAAeN,OAAO,CAACG,eAAD,EAAkB,EAAlB,CAAP,CAA6BF,WAA7B,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nconst SleepReview = props => {\n\n    // const dayReviewing = props.match.params.sleepDate;\n\n    // // console.log(dayReviewing)\n\n    // // This Day's Sleep\n    // const thisDaySleepDurationHours = props.sleepEntries.find(today => today.date === dayReviewing).durationHours\n    // const thisDaySleepDurationMinutes = props.sleepEntries.find(today => today.date === dayReviewing).durationMinutes\n    // const thisDaySleepDurationTotal = thisDaySleepDurationHours + (thisDaySleepDurationMinutes / 60)\n\n\n    // const thisDaySleepScore = props.sleepEntries.find(today => today.date === dayReviewing).score\n\n\n    // // Average Sleep Score\n    // const averageSleepScore = Math.round(props.sleepEntries.reduce((acc, val) => acc + val.score, 0) / props.sleepEntriesLength)\n\n    // // Average Sleep Duration: to calculate average sleep duration:\n\n    // // 1. We need to sum the hours from all sleep entries \n    // const totalDurationHours = props.sleepEntries.reduce((acc, val) => acc + val.durationHours, 0)\n\n    // // 2. Then we need to sum the minutes from all the sleep entries, and add them to the hours\n    // const totalDurationMinutes = (props.sleepEntries.reduce((acc, val) => acc + val.durationMinutes, 0)) / 60\n    // const totalDurationHoursAndMinutes = totalDurationHours + (totalDurationMinutes / 60)\n\n    // // 3. Then we need to get an average \n    // const averageSleep = Math.round(totalDurationHoursAndMinutes / props.sleepEntriesLength);\n\n    // // 3. But we also need to show the remaining minutes\n    // const averageSleepMinRemain = Math.round(totalDurationHoursAndMinutes % props.sleepEntriesLength)\n\n\n\n    // // Change in sleep\n    // const changeDuration = Math.round((thisDaySleepDurationTotal - averageSleep) / thisDaySleepDurationTotal * 100)\n    // const changeScore = Math.round((thisDaySleepScore - averageSleepScore) / thisDaySleepScore * 100)\n\n    return (\n        <div>\n            <h2>Data on your sleep</h2>\n\n            {/* <p>{dayReviewing.replace(/^(\\d{4})-(\\d{2})-(\\d{2})$/, \"$2-$3-$1\")}</p> */}\n\n            <h3>{/* Add awards */}</h3>\n\n            {/* <table className=\"datatable\">\n                <thead>\n                    <tr>\n                        <th></th>\n                        <th>Change</th>\n                        <th>Last night</th>\n                        <th>Average</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <th>Sleep duration</th>\n                        <td>{changeDuration}%</td>\n                        <td>{thisDaySleepDurationHours} hrs, {thisDaySleepDurationMinutes} min </td>\n                        <td>{averageSleep} hrs, {averageSleepMinRemain} mins</td>\n                    </tr>\n                    <tr>\n                        <th>Sleep score</th>\n                        <td>{changeScore}%</td>\n                        <td>{thisDaySleepScore}</td>\n                        <td>{averageSleepScore}</td>\n                    </tr>\n                    <tr>\n                        <th>Bedtime</th>\n                        <td>-20%</td>\n                        <td>22:59</td>\n                        <td>21:00</td>\n                    </tr>\n                </tbody>\n            </table> */}\n\n\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        sleepEntriesLength: state.sleepEntries.length,\n        sleepEntries: state.sleepEntries\n    }\n}\nexport default connect(mapStateToProps, {})(SleepReview);"]},"metadata":{},"sourceType":"module"}