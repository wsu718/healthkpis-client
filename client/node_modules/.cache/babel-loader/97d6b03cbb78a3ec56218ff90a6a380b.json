{"ast":null,"code":"import _objectSpread from \"/Users/williamsulinski/code/healthkpis/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/williamsulinski/code/healthkpis/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/williamsulinski/code/healthkpis/src/components/LogSleep.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { addSleep } from '../actions/actions';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  form: {\n    width: '100%',\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nconst LogSleep = props => {\n  const classes = useStyles(); // const today = new Date().toISOString().substr(0, 10);\n  // ? Is it better to create a new variable here, or do it in initial state of sleepText? This date is used to default the input element below. \n\n  const _useState = useState({\n    date: new Date().toISOString().substr(0, 10),\n    durationHours: 6,\n    durationMinutes: 5,\n    score: 76,\n    bedtimeHour: 10,\n    bedtimeMinutes: 45,\n    bedtimeAMPM: 'PM'\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        sleepText = _useState2[0],\n        setSleepText = _useState2[1];\n\n  const handleChanges = e => {\n    setSleepText(_objectSpread({}, sleepText, {\n      [e.target.name]: e.target.type === 'number' ? +e.target.value : e.target.value\n    }));\n  }; // console.log(sleepText);\n\n\n  console.log(sleepText.date);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.addSleep(sleepText);\n    props.history.push(`/sleep/${sleepText.date}`);\n  };\n\n  return React.createElement(\"main\", {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Log sleep\"), React.createElement(\"form\", {\n    className: classes.form,\n    noValidate: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Date\"), React.createElement(\"input\", {\n    type: \"date\",\n    name: \"date\",\n    value: sleepText.date,\n    onChange: handleChanges,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"date\",\n    label: \"Birthday\",\n    type: \"date\",\n    defaultValue: \"2017-05-24\",\n    className: classes.textField,\n    InputLabelProps: {\n      shrink: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"legend\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Sleep duration\"), React.createElement(\"input\", {\n    type: \"number\",\n    name: \"durationHours\",\n    min: \"0\",\n    max: \"24\",\n    onChange: handleChanges,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"durationHours\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"hours\"), React.createElement(\"input\", {\n    type: \"number\",\n    name: \"durationMinutes\",\n    min: \"0\",\n    max: \"59\",\n    onChange: handleChanges,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"durationMinutes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"minutes\")), React.createElement(TextField, {\n    type: \"number\",\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    id: \"score\",\n    label: \"Sleep Score\",\n    name: \"score\",\n    autoComplete: \"score\",\n    autoFocus: true,\n    min: \"0\",\n    max: \"100\",\n    onChange: handleChanges,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }), React.createElement(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(\"legend\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \"Bedtime\"), React.createElement(\"input\", {\n    type: \"number\",\n    name: \"bedtimeHour\",\n    onChange: handleChanges,\n    \"aria-label\": \"Bedtime Hour\",\n    min: \"1\",\n    max: \"12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"number\",\n    name: \"bedtimeMinutes\",\n    onChange: handleChanges,\n    \"aria-label\": \"Bedtime Minutes\",\n    min: \"0\",\n    max: \"59\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }), React.createElement(\"select\", {\n    name: \"bedtimeAMPM\",\n    \"aria-label\": \"PM or AM\",\n    onChange: handleChanges,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"PM\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, \"PM\"), React.createElement(\"option\", {\n    value: \"AM\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, \"AM\"))), React.createElement(\"button\", {\n    onClick: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, \"Log sleep\")));\n};\n\nconst mapStateToProps = state => {\n  return {\n    addSleep: addSleep,\n    sleepEntries: state.sleepEntries\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addSleep\n})(LogSleep);","map":{"version":3,"sources":["/Users/williamsulinski/code/healthkpis/src/components/LogSleep.js"],"names":["React","useState","connect","addSleep","Typography","makeStyles","TextField","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","form","width","submit","margin","LogSleep","props","classes","date","Date","toISOString","substr","durationHours","durationMinutes","score","bedtimeHour","bedtimeMinutes","bedtimeAMPM","sleepText","setSleepText","handleChanges","e","target","name","type","value","console","log","handleSubmit","preventDefault","history","push","textField","shrink","mapStateToProps","state","sleepEntries"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { addSleep } from '../actions/actions';\n\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nconst LogSleep = props => {\n\n    const classes = useStyles();\n\n\n    // const today = new Date().toISOString().substr(0, 10);\n    // ? Is it better to create a new variable here, or do it in initial state of sleepText? This date is used to default the input element below. \n\n    const [sleepText, setSleepText] = useState({\n        date: new Date().toISOString().substr(0, 10),\n        durationHours: 6,\n        durationMinutes: 5,\n        score: 76,\n        bedtimeHour: 10,\n        bedtimeMinutes: 45,\n        bedtimeAMPM: 'PM',\n    });\n\n    const handleChanges = e => {\n        setSleepText({\n            ...sleepText,\n            [e.target.name]: e.target.type === 'number' ? +e.target.value : e.target.value\n        });\n    };\n\n    // console.log(sleepText);\n\n    console.log(sleepText.date)\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        props.addSleep(sleepText);\n        props.history.push(`/sleep/${sleepText.date}`)\n    };\n\n    return (\n\n        <main className={classes.paper}>\n            <Typography component=\"h1\" variant=\"h5\">\n                Log sleep\n            </Typography>\n\n            <form className={classes.form} noValidate>\n                <label htmlFor=\"date\">\n                    Date\n                </label>\n                <input\n                    type=\"date\"\n                    name=\"date\"\n                    value={sleepText.date}\n                    onChange={handleChanges}\n                />\n\n                <TextField\n                    id=\"date\"\n                    label=\"Birthday\"\n                    type=\"date\"\n                    defaultValue=\"2017-05-24\"\n                    className={classes.textField}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                />\n\n\n                <fieldset>\n                    <legend>\n                        Sleep duration\n                    </legend>\n                    <input\n                        type=\"number\"\n                        name=\"durationHours\"\n                        min=\"0\"\n                        max=\"24\"\n                        onChange={handleChanges}\n                    />\n                    <label htmlFor=\"durationHours\">\n                        hours\n                    </label>\n                    <input\n                        type=\"number\"\n                        name=\"durationMinutes\"\n                        min=\"0\"\n                        max=\"59\"\n                        onChange={handleChanges}\n                    />\n                    <label htmlFor=\"durationMinutes\">\n                        minutes\n                    </label>\n                </fieldset>\n\n                {/* <label htmlFor=\"score\">Sleep score</label>\n\n                <input\n                    type=\"number\"\n                    name=\"score\"\n                    min=\"0\"\n                    max=\"100\"\n                    onChange={handleChanges}\n                /> */}\n\n                <TextField\n                    type=\"number\"\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    id=\"score\"\n                    label=\"Sleep Score\"\n                    name=\"score\"\n                    autoComplete=\"score\"\n                    autoFocus\n                    min=\"0\"\n                    max=\"100\"\n                    onChange={handleChanges}\n                />\n\n\n                <fieldset>\n                    <legend>Bedtime</legend>\n\n                    <input\n                        type=\"number\"\n                        name=\"bedtimeHour\"\n                        onChange={handleChanges}\n                        aria-label=\"Bedtime Hour\"\n                        min=\"1\"\n                        max=\"12\"\n                    />\n\n\n                    <input\n                        type=\"number\"\n                        name=\"bedtimeMinutes\"\n                        onChange={handleChanges}\n                        aria-label=\"Bedtime Minutes\"\n                        min=\"0\"\n                        max=\"59\"\n                    />\n\n                    <select name=\"bedtimeAMPM\" aria-label=\"PM or AM\" onChange={handleChanges}>\n                        <option value=\"PM\">PM</option>\n                        <option value=\"AM\">AM</option>\n                    </select>\n\n\n                </fieldset>\n\n                <button onClick={handleSubmit}>\n                    Log sleep\n                </button>\n\n\n            </form>\n\n\n        </main >\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        addSleep: addSleep,\n        sleepEntries: state.sleepEntries\n    }\n}\n\nexport default connect(mapStateToProps, { addSleep })(LogSleep);"]},"metadata":{},"sourceType":"module"}