{"ast":null,"code":"var _jsxFileName = \"/Users/williamsulinski/code/healthkpis/src/components/SleepReview.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nconst SleepReview = props => {\n  const dayReviewing = props.match.params.sleepDate; // console.log(dayReviewing)\n  // This Day's Sleep\n\n  const thisDaySleepDurationHours = props.sleepEntries.find(today => today.date === dayReviewing).durationHours;\n  const thisDaySleepDurationMinutes = props.sleepEntries.find(today => today.date === dayReviewing).durationMinutes;\n  const thisDaySleepDurationTotal = thisDaySleepDurationHours + thisDaySleepDurationMinutes / 60;\n  const thisDaySleepScore = props.sleepEntries.find(today => today.date === dayReviewing).score; // Average Sleep Score\n\n  const averageSleepScore = Math.round(props.sleepEntries.reduce((acc, val) => acc + val.score, 0) / props.sleepEntriesLength); // Average Sleep Duration: to calculate average sleep duration:\n  // 1. We need to sum the hours from all sleep entries \n\n  const totalDurationHours = props.sleepEntries.reduce((acc, val) => acc + val.durationHours, 0); // 2. Then we need to sum the minutes from all the sleep entries, and add them to the hours\n\n  const totalDurationMinutes = props.sleepEntries.reduce((acc, val) => acc + val.durationMinutes, 0) / 60;\n  const totalDurationHoursAndMinutes = totalDurationHours + totalDurationMinutes / 60; // 3. Then we need to get an average \n\n  const averageSleep = Math.round(totalDurationHoursAndMinutes / props.sleepEntriesLength); // 3. But we also need to show the remaining minutes\n\n  const averageSleepMinRemain = Math.round(totalDurationHoursAndMinutes % props.sleepEntriesLength); // Change in sleep\n\n  const changeDuration = Math.round((thisDaySleepDurationTotal - averageSleep) / thisDaySleepDurationTotal * 100);\n  const changeScore = Math.round((thisDaySleepScore - averageSleepScore) / thisDaySleepScore * 100);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Data on your sleep\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, dayReviewing.replace(/^(\\d{4})-(\\d{2})-(\\d{2})$/, \"$2-$3-$1\")), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(\"table\", {\n    className: \"datatable\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Change\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Last night\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Average\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Sleep duration\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, changeDuration, \"%\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, thisDaySleepDurationHours, \" hrs, \", thisDaySleepDurationMinutes, \" min \"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, averageSleep, \" hrs, \", averageSleepMinRemain, \" mins\")), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Sleep score\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, changeScore, \"%\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, thisDaySleepScore), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, averageSleepScore)), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Bedtime\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"-20%\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"22:59\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"21:00\")))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    sleepEntriesLength: state.sleepEntries.length,\n    sleepEntries: state.sleepEntries\n  };\n};\n\nexport default connect(mapStateToProps, {})(SleepReview);","map":{"version":3,"sources":["/Users/williamsulinski/code/healthkpis/src/components/SleepReview.js"],"names":["React","connect","SleepReview","props","dayReviewing","match","params","sleepDate","thisDaySleepDurationHours","sleepEntries","find","today","date","durationHours","thisDaySleepDurationMinutes","durationMinutes","thisDaySleepDurationTotal","thisDaySleepScore","score","averageSleepScore","Math","round","reduce","acc","val","sleepEntriesLength","totalDurationHours","totalDurationMinutes","totalDurationHoursAndMinutes","averageSleep","averageSleepMinRemain","changeDuration","changeScore","replace","mapStateToProps","state","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nconst SleepReview = props => {\n\n    const dayReviewing = props.match.params.sleepDate;\n\n    // console.log(dayReviewing)\n\n    // This Day's Sleep\n    const thisDaySleepDurationHours = props.sleepEntries.find(today => today.date === dayReviewing).durationHours\n    const thisDaySleepDurationMinutes = props.sleepEntries.find(today => today.date === dayReviewing).durationMinutes\n    const thisDaySleepDurationTotal = thisDaySleepDurationHours + (thisDaySleepDurationMinutes / 60)\n\n    const thisDaySleepScore = props.sleepEntries.find(today => today.date === dayReviewing).score\n\n\n    // Average Sleep Score\n    const averageSleepScore = Math.round(props.sleepEntries.reduce((acc, val) => acc + val.score, 0) / props.sleepEntriesLength)\n\n    // Average Sleep Duration: to calculate average sleep duration:\n\n    // 1. We need to sum the hours from all sleep entries \n    const totalDurationHours = props.sleepEntries.reduce((acc, val) => acc + val.durationHours, 0)\n\n    // 2. Then we need to sum the minutes from all the sleep entries, and add them to the hours\n    const totalDurationMinutes = (props.sleepEntries.reduce((acc, val) => acc + val.durationMinutes, 0)) / 60\n    const totalDurationHoursAndMinutes = totalDurationHours + (totalDurationMinutes / 60)\n\n    // 3. Then we need to get an average \n    const averageSleep = Math.round(totalDurationHoursAndMinutes / props.sleepEntriesLength);\n\n    // 3. But we also need to show the remaining minutes\n    const averageSleepMinRemain = Math.round(totalDurationHoursAndMinutes % props.sleepEntriesLength)\n\n\n\n    // Change in sleep\n    const changeDuration = Math.round((thisDaySleepDurationTotal - averageSleep) / thisDaySleepDurationTotal * 100)\n    const changeScore = Math.round((thisDaySleepScore - averageSleepScore) / thisDaySleepScore * 100)\n\n    return (\n        <div>\n            <h2>Data on your sleep</h2>\n\n            <p>{dayReviewing.replace(/^(\\d{4})-(\\d{2})-(\\d{2})$/, \"$2-$3-$1\")}</p>\n\n            <h3>{/* Add awards */}</h3>\n\n            <table className=\"datatable\">\n                <thead>\n                    <tr>\n                        <th></th>\n                        <th>Change</th>\n                        <th>Last night</th>\n                        <th>Average</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <th>Sleep duration</th>\n                        <td>{changeDuration}%</td>\n                        <td>{thisDaySleepDurationHours} hrs, {thisDaySleepDurationMinutes} min </td>\n                        <td>{averageSleep} hrs, {averageSleepMinRemain} mins</td>\n                    </tr>\n                    <tr>\n                        <th>Sleep score</th>\n                        <td>{changeScore}%</td>\n                        <td>{thisDaySleepScore}</td>\n                        <td>{averageSleepScore}</td>\n                    </tr>\n                    <tr>\n                        <th>Bedtime</th>\n                        <td>-20%</td>\n                        <td>22:59</td>\n                        <td>21:00</td>\n                    </tr>\n                </tbody>\n            </table>\n\n\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        sleepEntriesLength: state.sleepEntries.length,\n        sleepEntries: state.sleepEntries\n    }\n}\nexport default connect(mapStateToProps, {})(SleepReview);"]},"metadata":{},"sourceType":"module"}