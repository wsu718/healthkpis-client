{"ast":null,"code":"import _objectSpread from \"/Users/williamsulinski/code/healthkpis/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/williamsulinski/code/healthkpis/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/williamsulinski/code/healthkpis/src/components/LogSleep.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { addSleep } from '../actions/actions';\n\nconst LogSleep = props => {\n  // const today = new Date().toISOString().substr(0, 10);\n  // ? Is it better to create a new variable here, or do it in initial state of sleepText? This date is used to default the input element below. \n  const _useState = useState({\n    date: new Date().toISOString().substr(0, 10),\n    durationHours: 6,\n    durationMinutes: 5,\n    score: 76,\n    bedtime: \"22:45\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        sleepText = _useState2[0],\n        setSleepText = _useState2[1]; // Convert duration to seconds instead of hours and minutes\n\n\n  const handleChanges = e => {\n    setSleepText(_objectSpread({}, sleepText, {\n      [e.target.name]: e.target.type === 'number' ? +e.target.value : e.target.value\n    }));\n  }; // console.log(sleepText);\n\n\n  console.log(sleepText.date);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.addSleep(sleepText);\n    props.history.push(`/sleep/${sleepText.date}`);\n  };\n\n  return React.createElement(\"main\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Log sleep\"), React.createElement(\"form\", {\n    className: \"logsleepform\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"date\",\n    name: \"date\",\n    value: sleepText.date,\n    onChange: handleChanges,\n    \"aria-label\": \"Date\",\n    className: \"logsleepdate\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"legend\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Sleep duration\"), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Sleep duration\"), React.createElement(\"input\", {\n    type: \"number\",\n    name: \"durationHours\",\n    id: \"durationHours\",\n    min: \"0\",\n    max: \"24\",\n    onChange: handleChanges,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"durationHours\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"hours\"), React.createElement(\"input\", {\n    id: \"durationMinutes\",\n    type: \"number\",\n    name: \"durationMinutes\",\n    min: \"0\",\n    max: \"59\",\n    onChange: handleChanges,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"durationMinutes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"minutes\")), React.createElement(\"label\", {\n    htmlFor: \"score\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Sleep score\")), React.createElement(\"input\", {\n    type: \"number\",\n    name: \"score\",\n    min: \"0\",\n    max: \"100\",\n    onChange: handleChanges,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"bedtime\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Bedtime\")), React.createElement(\"input\", {\n    type: \"time\",\n    name: \"bedtime\",\n    id: \"bedtime\",\n    onChange: handleChanges,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Log sleep\"))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    addSleep: addSleep,\n    sleepEntries: state.sleepEntries\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addSleep\n})(LogSleep);","map":{"version":3,"sources":["/Users/williamsulinski/code/healthkpis/src/components/LogSleep.js"],"names":["React","useState","connect","addSleep","LogSleep","props","date","Date","toISOString","substr","durationHours","durationMinutes","score","bedtime","sleepText","setSleepText","handleChanges","e","target","name","type","value","console","log","handleSubmit","preventDefault","history","push","mapStateToProps","state","sleepEntries"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { addSleep } from '../actions/actions';\n\nconst LogSleep = props => {\n\n    // const today = new Date().toISOString().substr(0, 10);\n    // ? Is it better to create a new variable here, or do it in initial state of sleepText? This date is used to default the input element below. \n\n    const [sleepText, setSleepText] = useState({\n        date: new Date().toISOString().substr(0, 10),\n        durationHours: 6,\n        durationMinutes: 5,\n        score: 76,\n        bedtime: \"22:45\"\n    });\n\n    // Convert duration to seconds instead of hours and minutes\n\n    const handleChanges = e => {\n        setSleepText({\n            ...sleepText,\n            [e.target.name]: e.target.type === 'number' ? +e.target.value : e.target.value\n        });\n    };\n\n    // console.log(sleepText);\n\n    console.log(sleepText.date)\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        props.addSleep(sleepText);\n        props.history.push(`/sleep/${sleepText.date}`)\n    };\n\n    return (\n\n        <main>\n            <h2>\n                Log sleep\n            </h2>\n\n            <form className=\"logsleepform\">\n\n                <input\n                    type=\"date\"\n                    name=\"date\"\n                    value={sleepText.date}\n                    onChange={handleChanges}\n                    aria-label=\"Date\"\n                    className=\"logsleepdate\"\n\n                />\n\n                <fieldset>\n                    <legend>\n                        Sleep duration\n                    </legend>\n                    <h3>Sleep duration</h3>\n                    <input\n                        type=\"number\"\n                        name=\"durationHours\"\n                        id=\"durationHours\"\n                        min=\"0\"\n                        max=\"24\"\n                        onChange={handleChanges}\n                    />\n                    <label htmlFor=\"durationHours\">\n                        hours\n                    </label>\n                    <input\n                        id=\"durationMinutes\"\n                        type=\"number\"\n                        name=\"durationMinutes\"\n                        min=\"0\"\n                        max=\"59\"\n                        onChange={handleChanges}\n                    />\n                    <label htmlFor=\"durationMinutes\">\n                        minutes\n                    </label>\n                </fieldset>\n\n                <label htmlFor=\"score\"><h3>Sleep score</h3></label>\n\n                <input\n                    type=\"number\"\n                    name=\"score\"\n                    min=\"0\"\n                    max=\"100\"\n                    onChange={handleChanges}\n                />\n\n                <label htmlFor=\"bedtime\"><h3>Bedtime</h3></label>\n\n                <input\n                    type=\"time\"\n                    name=\"bedtime\"\n                    id=\"bedtime\"\n                    onChange={handleChanges}\n                    required\n\n                />\n                <p>\n                    <button onClick={handleSubmit}>\n                        Log sleep\n                </button>\n\n                </p>\n            </form>\n\n\n        </main >\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        addSleep: addSleep,\n        sleepEntries: state.sleepEntries\n    }\n}\n\nexport default connect(mapStateToProps, { addSleep })(LogSleep);"]},"metadata":{},"sourceType":"module"}