{"ast":null,"code":"import _objectSpread from \"/Users/williamsulinski/code/healthkpis/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/williamsulinski/code/healthkpis/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/williamsulinski/code/healthkpis/src/components/CreateExperiment.js\";\nimport React, { useState } from 'react'; // Add conditional for if they have 7 days of data entered\n\nconst CreateExperiment = () => {\n  const _useState = useState({\n    date: '',\n    experiment: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        experiment = _useState2[0],\n        setExperiment = _useState2[1];\n\n  const handleSelect = e => {\n    setExperiment(_objectSpread({}, experiment, {\n      [e.target.name]: e.target.value,\n      date: new Date().toISOString().substr(0, 10)\n    }));\n  };\n\n  console.log(experiment);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.addExperiment(setExperiment);\n    props.history.push(`/experiments`);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Create your experiment\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Experiments are each one week long\"), React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"radio\",\n    value: \"alcohol\",\n    id: \"alcohol\",\n    onChange: handleSelect,\n    name: \"experiment\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"alcohol\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Drink no alcohol\"), React.createElement(\"input\", {\n    type: \"radio\",\n    value: \"sleepearlier\",\n    id: \"sleepearlier\",\n    onChange: handleSelect,\n    name: \"experiment\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"sleepearlier\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Go to sleep one hour earlier\"), React.createElement(\"input\", {\n    type: \"radio\",\n    value: \"temp\",\n    id: \"temp\",\n    onChange: handleSelect,\n    name: \"experiment\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"temp\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Set temperature to 65 degrees\"), React.createElement(\"input\", {\n    type: \"radio\",\n    value: \"eat\",\n    id: \"eat\",\n    onChange: handleSelect,\n    name: \"experiment\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"eat\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Don't eat 3 hours before bed\"), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Create experiment\")));\n};\n\nexport default CreateExperiment;","map":{"version":3,"sources":["/Users/williamsulinski/code/healthkpis/src/components/CreateExperiment.js"],"names":["React","useState","CreateExperiment","date","experiment","setExperiment","handleSelect","e","target","name","value","Date","toISOString","substr","console","log","handleSubmit","preventDefault","props","addExperiment","history","push"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CAEA;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAAA,oBAESD,QAAQ,CAAC;AACzCE,IAAAA,IAAI,EAAE,EADmC;AAEzCC,IAAAA,UAAU,EAAE;AAF6B,GAAD,CAFjB;AAAA;AAAA,QAEpBA,UAFoB;AAAA,QAERC,aAFQ;;AAO3B,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACtBF,IAAAA,aAAa,mBACND,UADM;AAET,OAACG,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE,KAFjB;AAGTP,MAAAA,IAAI,EAAE,IAAIQ,IAAJ,GAAWC,WAAX,GAAyBC,MAAzB,CAAgC,CAAhC,EAAmC,EAAnC;AAHG,OAAb;AAKH,GAND;;AAQAC,EAAAA,OAAO,CAACC,GAAR,CAAYX,UAAZ;;AAEA,QAAMY,YAAY,GAAGT,CAAC,IAAI;AACtBA,IAAAA,CAAC,CAACU,cAAF;AACAC,IAAAA,KAAK,CAACC,aAAN,CAAoBd,aAApB;AACAa,IAAAA,KAAK,CAACE,OAAN,CAAcC,IAAd,CAAoB,cAApB;AACH,GAJD;;AAMA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAFJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,KAAK,EAAC,SAFV;AAGI,IAAA,EAAE,EAAC,SAHP;AAII,IAAA,QAAQ,EAAEf,YAJd;AAKI,IAAA,IAAI,EAAC,YALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAQI;AAAO,IAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBARJ,EAUI;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,KAAK,EAAC,cAFV;AAGI,IAAA,EAAE,EAAC,cAHP;AAII,IAAA,QAAQ,EAAEA,YAJd;AAKI,IAAA,IAAI,EAAC,YALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,EAiBI;AAAO,IAAA,OAAO,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAjBJ,EAmBI;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,KAAK,EAAC,MAFV;AAGI,IAAA,EAAE,EAAC,MAHP;AAII,IAAA,QAAQ,EAAEA,YAJd;AAKI,IAAA,IAAI,EAAC,YALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBJ,EA0BI;AAAO,IAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCA1BJ,EA4BI;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,KAAK,EAAC,KAFV;AAGI,IAAA,EAAE,EAAC,KAHP;AAII,IAAA,QAAQ,EAAEA,YAJd;AAKI,IAAA,IAAI,EAAC,YALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5BJ,EAmCI;AAAO,IAAA,OAAO,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAnCJ,EAqCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBArCJ,CAJJ,CADJ;AAgDH,CAvED;;AAyEA,eAAeJ,gBAAf","sourcesContent":["import React, { useState } from 'react';\n\n// Add conditional for if they have 7 days of data entered\n\nconst CreateExperiment = () => {\n\n    const [experiment, setExperiment] = useState({\n        date: '',\n        experiment: ''\n    });\n\n    const handleSelect = e => {\n        setExperiment({\n            ...experiment,\n            [e.target.name]: e.target.value,\n            date: new Date().toISOString().substr(0, 10)\n        })\n    }\n\n    console.log(experiment);\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        props.addExperiment(setExperiment);\n        props.history.push(`/experiments`)\n    };\n\n    return (\n        <div>\n            <h2>Create your experiment</h2>\n            <p>Experiments are each one week long</p>\n\n            <form>\n                <input\n                    type=\"radio\"\n                    value=\"alcohol\"\n                    id=\"alcohol\"\n                    onChange={handleSelect}\n                    name=\"experiment\"\n                />\n                <label htmlFor=\"alcohol\">Drink no alcohol</label>\n\n                <input\n                    type=\"radio\"\n                    value=\"sleepearlier\"\n                    id=\"sleepearlier\"\n                    onChange={handleSelect}\n                    name=\"experiment\"\n                />\n                <label htmlFor=\"sleepearlier\">Go to sleep one hour earlier</label>\n\n                <input\n                    type=\"radio\"\n                    value=\"temp\"\n                    id=\"temp\"\n                    onChange={handleSelect}\n                    name=\"experiment\"\n                />\n                <label htmlFor=\"temp\">Set temperature to 65 degrees</label>\n\n                <input\n                    type=\"radio\"\n                    value=\"eat\"\n                    id=\"eat\"\n                    onChange={handleSelect}\n                    name=\"experiment\"\n                />\n                <label htmlFor=\"eat\">Don't eat 3 hours before bed</label>\n\n                <button>Create experiment</button>\n\n\n            </form>\n        </div>\n    )\n}\n\nexport default CreateExperiment;"]},"metadata":{},"sourceType":"module"}