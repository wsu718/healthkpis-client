{"ast":null,"code":"import _objectSpread from \"/Users/williamsulinski/code/healthkpis/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/williamsulinski/code/healthkpis/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/williamsulinski/code/healthkpis/src/components/CreateExperiment.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { addExperiment } from '../actions/actions';\nimport styled from \"styled-components\"; // Add conditional for if they have 7 days of data entered\n\nconst Button = styled.button`\nmargin-top: 20px;\n`;\n\nconst CreateExperiment = props => {\n  const _useState = useState({\n    date: '',\n    experiment: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        experiment = _useState2[0],\n        setExperiment = _useState2[1];\n\n  const handleSelect = e => {\n    setExperiment(_objectSpread({}, experiment, {\n      [e.target.name]: e.target.value,\n      date: new Date().toISOString().substr(0, 10)\n    }));\n  };\n\n  console.log(experiment);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.addExperiment(experiment);\n    props.history.push(`/experiments`);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Create your experiment\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Experiments are each one week long\"), React.createElement(\"form\", {\n    className: \"radioButtons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"radio\",\n    value: \"Drink no alcohol\",\n    id: \"alcohol\",\n    onChange: handleSelect,\n    name: \"experiment\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"alcohol\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Drink no alcohol\"), React.createElement(\"input\", {\n    type: \"radio\",\n    value: \"Go to sleep one hour earlier\",\n    id: \"sleepearlier\",\n    onChange: handleSelect,\n    name: \"experiment\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"sleepearlier\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Go to sleep one hour earlier\"), React.createElement(\"input\", {\n    type: \"radio\",\n    value: \"Set temperature to 65 degrees\",\n    id: \"temp\",\n    onChange: handleSelect,\n    name: \"experiment\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"temp\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Set temperature to 65 degrees\"), React.createElement(\"input\", {\n    type: \"radio\",\n    value: \"Don't eat 3 hours before bed\",\n    id: \"eat\",\n    onChange: handleSelect,\n    name: \"experiment\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"eat\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Don't eat 3 hours before bed\"), React.createElement(Button, {\n    onClick: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Create new experiment\")));\n};\n\nconst mapStateToProps = state => {\n  return {\n    addExperiment: addExperiment\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addExperiment\n})(CreateExperiment);","map":{"version":3,"sources":["/Users/williamsulinski/code/healthkpis/src/components/CreateExperiment.js"],"names":["React","useState","connect","addExperiment","styled","Button","button","CreateExperiment","props","date","experiment","setExperiment","handleSelect","e","target","name","value","Date","toISOString","substr","console","log","handleSubmit","preventDefault","history","push","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { addExperiment } from '../actions/actions';\nimport styled from \"styled-components\";\n\n// Add conditional for if they have 7 days of data entered\n\nconst Button = styled.button`\nmargin-top: 20px;\n`\n\nconst CreateExperiment = props => {\n\n    const [experiment, setExperiment] = useState({\n        date: '',\n        experiment: ''\n    });\n\n    const handleSelect = e => {\n        setExperiment({\n            ...experiment,\n            [e.target.name]: e.target.value,\n            date: new Date().toISOString().substr(0, 10)\n        })\n    }\n\n    console.log(experiment);\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        props.addExperiment(experiment);\n        props.history.push(`/experiments`)\n    };\n\n    return (\n        <div>\n            <h2>Create your experiment</h2>\n            <p>Experiments are each one week long</p>\n\n            <form className=\"radioButtons\">\n\n                <input\n                    type=\"radio\"\n                    value=\"Drink no alcohol\"\n                    id=\"alcohol\"\n                    onChange={handleSelect}\n                    name=\"experiment\"\n                />\n\n                <label htmlFor=\"alcohol\">Drink no alcohol</label>\n\n                <input\n                    type=\"radio\"\n                    value=\"Go to sleep one hour earlier\"\n                    id=\"sleepearlier\"\n                    onChange={handleSelect}\n                    name=\"experiment\"\n                />\n                <label htmlFor=\"sleepearlier\">Go to sleep one hour earlier</label>\n\n                <input\n                    type=\"radio\"\n                    value=\"Set temperature to 65 degrees\"\n                    id=\"temp\"\n                    onChange={handleSelect}\n                    name=\"experiment\"\n                />\n                <label htmlFor=\"temp\">Set temperature to 65 degrees</label>\n\n                <input\n                    type=\"radio\"\n                    value=\"Don't eat 3 hours before bed\"\n                    id=\"eat\"\n                    onChange={handleSelect}\n                    name=\"experiment\"\n                />\n                <label htmlFor=\"eat\">Don't eat 3 hours before bed</label>\n\n                <Button onClick={handleSubmit}>Create new experiment</Button>\n\n\n            </form>\n        </div >\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        addExperiment: addExperiment,\n    }\n}\n\nexport default connect(mapStateToProps, { addExperiment })(CreateExperiment);"]},"metadata":{},"sourceType":"module"}