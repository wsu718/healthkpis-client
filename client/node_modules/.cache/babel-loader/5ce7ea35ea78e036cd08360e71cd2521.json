{"ast":null,"code":"import _objectSpread from \"/Users/williamsulinski/code/healthkpis/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { ADD_SLEEP } from '../actions/sleepActions';\nconst initialState = {\n  sleepEntries: [{\n    date: '2019-12-28',\n    durationHours: 6,\n    durationMinutes: 5,\n    score: 76,\n    bedtimeHour: 10,\n    bedtimeMinutes: 45,\n    bedtimeAMPM: 'PM' // Date will be handled by the server eventually\n\n  }]\n};\nexport const sleepReducer = (state = initialState, action) => {\n  console.log(state, action);\n\n  switch (action.type) {\n    case ADD_SLEEP:\n      return _objectSpread({}, state, {\n        sleepEntries: [...state.sleepEntries, action.payload]\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/williamsulinski/code/healthkpis/src/reducers/sleepReducer.js"],"names":["ADD_SLEEP","initialState","sleepEntries","date","durationHours","durationMinutes","score","bedtimeHour","bedtimeMinutes","bedtimeAMPM","sleepReducer","state","action","console","log","type","payload"],"mappings":";AAAA,SAASA,SAAT,QAA0B,yBAA1B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,YAAY,EAAE,CACV;AACIC,IAAAA,IAAI,EAAE,YADV;AAEIC,IAAAA,aAAa,EAAE,CAFnB;AAGIC,IAAAA,eAAe,EAAE,CAHrB;AAIIC,IAAAA,KAAK,EAAE,EAJX;AAKIC,IAAAA,WAAW,EAAE,EALjB;AAMIC,IAAAA,cAAc,EAAE,EANpB;AAOIC,IAAAA,WAAW,EAAE,IAPjB,CASI;;AATJ,GADU;AADG,CAArB;AAgBA,OAAO,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGV,YAAT,EAAuBW,MAAvB,KAAkC;AAC1DC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ,EAAmBC,MAAnB;;AACA,UAAQA,MAAM,CAACG,IAAf;AACI,SAAKf,SAAL;AACI,+BACOW,KADP;AAEIT,QAAAA,YAAY,EAAE,CACV,GAAGS,KAAK,CAACT,YADC,EAEVU,MAAM,CAACI,OAFG;AAFlB;;AAOJ;AACI,aAAOL,KAAP;AAVR;AAYH,CAdM","sourcesContent":["import { ADD_SLEEP } from '../actions/sleepActions';\n\nconst initialState = {\n    sleepEntries: [\n        {\n            date: '2019-12-28',\n            durationHours: 6,\n            durationMinutes: 5,\n            score: 76,\n            bedtimeHour: 10,\n            bedtimeMinutes: 45,\n            bedtimeAMPM: 'PM'\n\n            // Date will be handled by the server eventually\n        }\n    ]\n}\n\nexport const sleepReducer = (state = initialState, action) => {\n    console.log(state, action);\n    switch (action.type) {\n        case ADD_SLEEP:\n            return {\n                ...state,\n                sleepEntries: [\n                    ...state.sleepEntries,\n                    action.payload\n                ]\n            }\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}