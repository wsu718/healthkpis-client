{"ast":null,"code":"var _jsxFileName = \"/Users/williamsulinski/code/healthkpis/src/components/ExperimentReview.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Moment from 'react-moment';\nimport moment from 'moment';\n\nconst ExperimentReview = props => {\n  const experimentDate = props.match.params.experimentDate;\n  const experimentName = props.experiments.find(e => e.date === experimentDate).experiment;\n  const today = moment();\n  const experimentEndDate = moment(experimentDate).add(7, 'days'); // set experimentStatus based on whether today is 7 days after the experiment was created\n\n  let experimentStatus = '';\n\n  if (today.isAfter(experimentEndDate)) {\n    experimentStatus = 'complete';\n  } else if (today.isAfter(experimentDate)) {\n    experimentStatus = 'ongoing';\n  } else {\n    experimentStatus = 'complete';\n  } // Create function that \n\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Experiment is \", experimentStatus, \"!\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Challenge start date: \", experimentDate), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Challenge name: \", experimentName), React.createElement(\"table\", {\n    className: \"datatable\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Change\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Last night\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Average\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Sleep duration\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, changeDuration, \"%\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, thisDaySleepDurationHours, \" hrs, \", thisDaySleepDurationMinutes, \" min \"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, averageSleep, \" hrs, \", averageSleepMinRemain, \" mins\")), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Sleep score\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, changeScore, \"%\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, thisDaySleepScore), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, averageSleepScore)), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Bedtime\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"-20%\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"22:59\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"21:00\")))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    experiments: state.experiments\n  };\n};\n\nexport default connect(mapStateToProps, {})(ExperimentReview);","map":{"version":3,"sources":["/Users/williamsulinski/code/healthkpis/src/components/ExperimentReview.js"],"names":["React","connect","Moment","moment","ExperimentReview","props","experimentDate","match","params","experimentName","experiments","find","e","date","experiment","today","experimentEndDate","add","experimentStatus","isAfter","changeDuration","thisDaySleepDurationHours","thisDaySleepDurationMinutes","averageSleep","averageSleepMinRemain","changeScore","thisDaySleepScore","averageSleepScore","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport Moment from 'react-moment';\nimport moment from 'moment';\n\nconst ExperimentReview = props => {\n\n    const experimentDate = props.match.params.experimentDate;\n    const experimentName = props.experiments.find(e => e.date === experimentDate).experiment\n    const today = moment();\n    const experimentEndDate = moment(experimentDate).add(7, 'days')\n\n    // set experimentStatus based on whether today is 7 days after the experiment was created\n    let experimentStatus = ''\n    if (today.isAfter(experimentEndDate)) {\n        experimentStatus = 'complete'\n    } else if (today.isAfter(experimentDate)) {\n        experimentStatus = 'ongoing'\n    } else {\n        experimentStatus = 'complete'\n    }\n\n    // Create function that \n\n    return (\n        <div>\n            <h2>Experiment is {experimentStatus}!</h2>\n            <p>Challenge start date: {experimentDate}</p>\n            <p>Challenge name: {experimentName}</p>\n\n            <table className=\"datatable\">\n                <thead>\n                    <tr>\n                        <th></th>\n                        <th>Change</th>\n                        <th>Last night</th>\n                        <th>Average</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <th>Sleep duration</th>\n                        <td>{changeDuration}%</td>\n                        <td>{thisDaySleepDurationHours} hrs, {thisDaySleepDurationMinutes} min </td>\n                        <td>{averageSleep} hrs, {averageSleepMinRemain} mins</td>\n                    </tr>\n                    <tr>\n                        <th>Sleep score</th>\n                        <td>{changeScore}%</td>\n                        <td>{thisDaySleepScore}</td>\n                        <td>{averageSleepScore}</td>\n                    </tr>\n                    <tr>\n                        <th>Bedtime</th>\n                        <td>-20%</td>\n                        <td>22:59</td>\n                        <td>21:00</td>\n                    </tr>\n                </tbody>\n            </table>\n\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        experiments: state.experiments\n    }\n}\n\nexport default connect(mapStateToProps, {})(ExperimentReview);"]},"metadata":{},"sourceType":"module"}