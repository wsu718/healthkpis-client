{"ast":null,"code":"import _objectSpread from \"/Users/williamsulinski/code/healthkpis/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/williamsulinski/code/healthkpis/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/williamsulinski/code/healthkpis/src/components/LogSleep.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { addSleep } from '../actions/sleepActions';\nimport SleepData from './SleepData';\n\nconst LogSleep = props => {\n  // const today = new Date().toISOString().substr(0, 10);\n  // ? Is it better to create a new variable here, or do it in initial state of sleepText? This date is used to default the input element below. \n  const _useState = useState({\n    duration: null,\n    score: null,\n    bedtime: null,\n    date: new Date().toISOString().substr(0, 10) // Date will be handled by the server eventually\n\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        sleepText = _useState2[0],\n        setSleepText = _useState2[1];\n\n  const handleChanges = e => {\n    setSleepText(_objectSpread({}, sleepText, {\n      [e.target.name]: e.target.type === 'number' ? +e.target.value : e.target.value\n    }));\n  }; // console.log(sleepText);\n\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.addSleep(sleepText);\n  };\n\n  return React.createElement(\"main\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Log sleep\"), React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    for: \"date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Date\"), React.createElement(\"input\", {\n    type: \"date\",\n    name: \"date\",\n    value: sleepText.date,\n    onChange: handleChanges,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"legend\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Sleep duration\"), React.createElement(\"input\", {\n    type: \"number\",\n    name: \"durationHours\",\n    min: \"0\",\n    max: \"24\",\n    onChange: handleChanges,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    for: \"durationHours\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"hours\"), React.createElement(\"input\", {\n    type: \"number\",\n    name: \"durationMinutes\",\n    onChange: handleChanges,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    for: \"durationMinutes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"minutes\")), React.createElement(\"label\", {\n    for: \"score\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Sleep score\"), React.createElement(\"input\", {\n    type: \"number\",\n    name: \"score\",\n    onChange: handleChanges,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), React.createElement(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"legend\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Bedtime\"), React.createElement(\"input\", {\n    type: \"number\",\n    name: \"bedtimeHour\",\n    onChange: handleChanges,\n    \"aria-label\": \"Bedtime Hour\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"number\",\n    name: \"bedtimeMinutes\",\n    onChange: handleChanges,\n    \"aria-label\": \"Bedtime Minutes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), React.createElement(\"select\", {\n    name: \"AM/PM\",\n    \"aria-label\": \"AM or PM\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"AM\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"AM\"), React.createElement(\"option\", {\n    value: \"PM\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"PM\"))), React.createElement(\"button\", {\n    onClick: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"Log sleep\")), React.createElement(\"section\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(SleepData, {\n    sleepEntries: props.sleepEntries,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  })));\n};\n\nconst mapStateToProps = state => {\n  return {\n    addSleep: addSleep,\n    sleepEntries: state.sleepEntries\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addSleep\n})(LogSleep);","map":{"version":3,"sources":["/Users/williamsulinski/code/healthkpis/src/components/LogSleep.js"],"names":["React","useState","connect","addSleep","SleepData","LogSleep","props","duration","score","bedtime","date","Date","toISOString","substr","sleepText","setSleepText","handleChanges","e","target","name","type","value","handleSubmit","preventDefault","sleepEntries","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { addSleep } from '../actions/sleepActions';\n\nimport SleepData from './SleepData';\n\n\n\nconst LogSleep = props => {\n\n    // const today = new Date().toISOString().substr(0, 10);\n    // ? Is it better to create a new variable here, or do it in initial state of sleepText? This date is used to default the input element below. \n\n    const [sleepText, setSleepText] = useState({\n        duration: null,\n        score: null,\n        bedtime: null,\n        date: new Date().toISOString().substr(0, 10)\n        // Date will be handled by the server eventually\n    });\n\n    const handleChanges = e => {\n        setSleepText({\n            ...sleepText,\n            [e.target.name]: e.target.type === 'number' ? +e.target.value : e.target.value\n        });\n    };\n\n    // console.log(sleepText);\n\n\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        props.addSleep(sleepText);\n    };\n\n    return (\n\n        <main>\n            <h2>\n                Log sleep\n            </h2>\n\n            <form>\n                <label for=\"date\">\n                    Date\n                </label>\n                <input\n                    type=\"date\"\n                    name=\"date\"\n                    value={sleepText.date}\n                    onChange={handleChanges}\n                />\n\n                <fieldset>\n                    <legend>\n                        Sleep duration\n                    </legend>\n                    <input\n                        type=\"number\"\n                        name=\"durationHours\"\n                        min=\"0\"\n                        max=\"24\"\n                        onChange={handleChanges}\n                    />\n                    <label for=\"durationHours\">\n                        hours\n                    </label>\n                    <input\n                        type=\"number\"\n                        name=\"durationMinutes\"\n                        onChange={handleChanges}\n                    />\n                    <label for=\"durationMinutes\">\n                        minutes\n                    </label>\n                </fieldset>\n\n                <label for=\"score\">Sleep score</label>\n\n                <input\n                    type=\"number\"\n                    name=\"score\"\n                    onChange={handleChanges}\n                />\n\n                <fieldset>\n                    <legend>Bedtime</legend>\n\n                    <input\n                        type=\"number\"\n                        name=\"bedtimeHour\"\n                        onChange={handleChanges}\n                        aria-label=\"Bedtime Hour\"\n                    />\n\n\n                    <input\n                        type=\"number\"\n                        name=\"bedtimeMinutes\"\n                        onChange={handleChanges}\n                        aria-label=\"Bedtime Minutes\"\n                    />\n\n                    <select name=\"AM/PM\" aria-label=\"AM or PM\">\n                        <option value=\"AM\">AM</option>\n                        <option value=\"PM\">PM</option>\n                    </select>\n\n\n                </fieldset>\n\n                <button onClick={handleSubmit}>\n                    Log sleep\n                </button>\n\n\n            </form>\n\n            <section>\n                <SleepData sleepEntries={props.sleepEntries} />\n\n\n            </section>\n        </main >\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        addSleep: addSleep,\n        sleepEntries: state.sleepEntries\n    }\n}\n\nexport default connect(mapStateToProps, { addSleep })(LogSleep);"]},"metadata":{},"sourceType":"module"}