{"ast":null,"code":"import _objectSpread from \"/Users/williamsulinski/code/healthkpis/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/williamsulinski/code/healthkpis/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/williamsulinski/code/healthkpis/src/components/LogSleep.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { addSleep } from '../actions/sleepActions';\nimport SleepData from './SleepData';\nimport { sleepReducer } from '../reducers/sleepReducer';\n\nconst LogSleep = props => {\n  let today = new Date().toLocaleString();\n\n  const _useState = useState({\n    duration: null,\n    score: null,\n    bedtime: null,\n    date: today\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        sleepText = _useState2[0],\n        setSleepText = _useState2[1];\n\n  const handleChanges = e => {\n    // console.log(e.target.value)\n    setSleepText(_objectSpread({}, sleepText, {\n      [e.target.name]: e.target.type === 'number' ? +e.target.value : e.target.value\n    }));\n  }; // console.log(sleepText);\n\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.addSleep(sleepText);\n  };\n\n  return React.createElement(\"main\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Log sleep\"), React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Sleep duration\", React.createElement(\"input\", {\n    type: \"number\",\n    name: \"duration\",\n    onChange: handleChanges,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Sleep score\", React.createElement(\"input\", {\n    type: \"number\",\n    name: \"score\",\n    onChange: handleChanges,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Bedtime\", React.createElement(\"input\", {\n    type: \"number\",\n    name: \"bedtime\",\n    onChange: handleChanges,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    onClick: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Log sleep\")), React.createElement(\"section\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(SleepData, {\n    sleepEntries: props.sleepEntries,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), props.sleepEntries.map(i => React.createElement(\"p\", {\n    key: i.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, i.duration))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    addSleep: addSleep,\n    sleepEntries: state.sleepEntries\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addSleep\n})(LogSleep);","map":{"version":3,"sources":["/Users/williamsulinski/code/healthkpis/src/components/LogSleep.js"],"names":["React","useState","connect","addSleep","SleepData","sleepReducer","LogSleep","props","today","Date","toLocaleString","duration","score","bedtime","date","sleepText","setSleepText","handleChanges","e","target","name","type","value","handleSubmit","preventDefault","sleepEntries","map","i","id","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,yBAAzB;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,YAAT,QAA6B,0BAA7B;;AAGA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AACtB,MAAIC,KAAK,GAAG,IAAIC,IAAJ,GAAWC,cAAX,EAAZ;;AADsB,oBAGYT,QAAQ,CAAC;AACvCU,IAAAA,QAAQ,EAAE,IAD6B;AAEvCC,IAAAA,KAAK,EAAE,IAFgC;AAGvCC,IAAAA,OAAO,EAAE,IAH8B;AAIvCC,IAAAA,IAAI,EAAEN;AAJiC,GAAD,CAHpB;AAAA;AAAA,QAGfO,SAHe;AAAA,QAGJC,YAHI;;AAUtB,QAAMC,aAAa,GAAGC,CAAC,IAAI;AACvB;AACAF,IAAAA,YAAY,mBACLD,SADK;AAER,OAACG,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE,IAAT,KAAkB,QAAlB,GAA6B,CAACH,CAAC,CAACC,MAAF,CAASG,KAAvC,GAA+CJ,CAAC,CAACC,MAAF,CAASG;AAFjE,OAAZ;AAIH,GAND,CAVsB,CAkBtB;;;AAIA,QAAMC,YAAY,GAAGL,CAAC,IAAI;AACtBA,IAAAA,CAAC,CAACM,cAAF;AACAjB,IAAAA,KAAK,CAACJ,QAAN,CAAeY,SAAf;AACH,GAHD;;AAKA,SAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEI;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,IAAI,EAAC,UAFT;AAGI,IAAA,QAAQ,EAAEE,aAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,IAAI,EAAC,OAFT;AAGI,IAAA,QAAQ,EAAEA,aAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAVJ,EAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAEI;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,IAAI,EAAC,SAFT;AAGI,IAAA,QAAQ,EAAEA,aAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAnBJ,EA4BI;AAAQ,IAAA,OAAO,EAAEM,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBA5BJ,CALJ,EAsCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAW,IAAA,YAAY,EAAEhB,KAAK,CAACkB,YAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAGKlB,KAAK,CAACkB,YAAN,CAAmBC,GAAnB,CAAuBC,CAAC,IACrB;AAAG,IAAA,GAAG,EAAEA,CAAC,CAACC,EAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAeD,CAAC,CAAChB,QAAjB,CADH,CAHL,CAtCJ,CAFJ;AAiDH,CA5ED;;AA8EA,MAAMkB,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACH3B,IAAAA,QAAQ,EAAEA,QADP;AAEHsB,IAAAA,YAAY,EAAEK,KAAK,CAACL;AAFjB,GAAP;AAKH,CAND;;AAQA,eAAevB,OAAO,CAAC2B,eAAD,EAAkB;AAAE1B,EAAAA;AAAF,CAAlB,CAAP,CAAuCG,QAAvC,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { addSleep } from '../actions/sleepActions';\n\nimport SleepData from './SleepData';\nimport { sleepReducer } from '../reducers/sleepReducer';\n\n\nconst LogSleep = props => {\n    let today = new Date().toLocaleString();\n\n    const [sleepText, setSleepText] = useState({\n        duration: null,\n        score: null,\n        bedtime: null,\n        date: today\n    });\n\n    const handleChanges = e => {\n        // console.log(e.target.value)\n        setSleepText({\n            ...sleepText,\n            [e.target.name]: e.target.type === 'number' ? +e.target.value : e.target.value,\n        });\n    };\n\n    // console.log(sleepText);\n\n\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        props.addSleep(sleepText);\n    };\n\n    return (\n\n        <main>\n            <h2>\n                Log sleep\n            </h2>\n\n            <form>\n                <label>\n                    Sleep duration\n                    <input\n                        type='number'\n                        name='duration'\n                        onChange={handleChanges}\n                    />\n                </label>\n\n                <label>\n                    Sleep score\n                    <input\n                        type='number'\n                        name='score'\n                        onChange={handleChanges}\n                    />\n                </label>\n\n                <label>\n                    Bedtime\n                    <input\n                        type='number'\n                        name='bedtime'\n                        onChange={handleChanges}\n                    />\n                </label>\n\n                <button onClick={handleSubmit}>\n                    Log sleep\n                </button>\n            </form>\n\n            <section>\n                <SleepData sleepEntries={props.sleepEntries} />\n\n                {props.sleepEntries.map(i => (\n                    <p key={i.id}>{i.duration}</p>\n                ))}\n            </section>\n        </main>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        addSleep: addSleep,\n        sleepEntries: state.sleepEntries\n    }\n\n}\n\nexport default connect(mapStateToProps, { addSleep })(LogSleep);"]},"metadata":{},"sourceType":"module"}